<!----------------------------------------------------------------------------
   DependencyAnalysis.h.htm  -Published HTML File
   Published on : 2017-04-04.21:42:45
   Author:Karthik Palepally Muniyappa  
----------------------------------------------------------------------------->
<html>
<head>
<link rel="stylesheet" href="../CSS/style.css">
</head>
<body>
<h3>DependencyAnalysis.h</h3>
<hr />
<div class="indent">
<h4>Dependencies:</h4>
<ul>
<li><a href="DependencyAnalysis.cpp.htm">DependencyAnalysis.cpp</a></li>
<li><a href="Typtable.h.htm">Typtable.h</a></li>
<li><a href="NoSqlDb.h.htm">NoSqlDb.h</a></li>
<li><a href="DBWrapper.h.htm">DBWrapper.h</a></li>
</ul>
</div>
<hr />
<pre>
#pragma once 
/////////////////////////////////////////////////////////////////////////////////////// 
// DependencyAnalysis.h - computes dependencies between files based on type table info// 
//                                                                                    // 
// Karthik Palepally Muniyappa,CSE687 - Object Oriented Design, Spring 2017          //  
//                                                                                  // 
//////////////////////////////////////////////////////////////////////////////////// 
/* 
Module Operations: 
================== 
This module defines an DDependencyTable Class 
DDependencyTable class defines functions to: 
build dependency table based on type info stored in type table 
return keys stored in the database 
return row for a given key from the db 
show the contents of the dependecy table 
 
Public Interface: 
================= 
DependencyTable(std::string xmlName); 
bool buildDependencyTable(std::vector&lt;std::string&gt; fileNames, TypeTable &typeTable); 
vector&lt;string&gt; getDBKeys(); 
Element&lt;std::string&gt; getRecord(std::string ky); 
void showDepTable(); 
* Required Files: 
* --------------- 
*   - Typtable.h 
*   - DBWrapper.h 
*    -Tokenizer.h 
* Build Process: 
* -------------- 
*   devenv DependencyAnalyzer.sln /debug rebuild 
* 
* Maintenance History: 
* -------------------- 
ver 0.1 : 7nd March 2017 
* 
/* 
* - 
*/ 
#include "../TypeTable/Typtable.h" 
#include "../DBWrapper/DBWrapper.h" 
#include "../Tokenizer/Tokenizer.h" 
 
namespace CodeAnalysis 
{ 
 
	class DependencyTable 
	{<button onclick="myFunction(this)" id="button57">-</button><pre class="showElem" id="button57_pre"> 
	public: 
 
		DependencyTable(std::string xmlName); 
		bool buildDependencyTable(std::vector&lt;std::string&gt; fileNames, TypeTable &typeTable); 
		vector&lt;string&gt; getDBKeys(); 
		Element&lt;std::string&gt; getRecord(std::string ky); 
		void showDepTable(); 
 
	private: 
		DBWrapper&lt;string&gt; DependecyTableDB; 
		std::string xmlPath; 
		std::stack&lt;std::string&gt; DependencyTable::split(const std::string s, char delim); 
		void insertFileDpndncy(std::string key, std::vector&lt;std::string&gt; depFile); 
		void removeDuplicates(std::vector&lt;std::string&gt;& vec); 
 
 
</pre>	}; 
} 
 
  
</pre>
<script src="../JS/hideHandler.js"></script>
</body>
</html>